# -*- coding: utf-8 -*-
"""Datenbanken - Exc3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ijGmKMiiR8agXGop1kwDgKFkgKP5kDpS
"""


import csv
import sys

table1 = sys.argv[1]
table2 = sys.argv[2]
outputFile = sys.argv[3]
#args = ['','Athletes.csv','Results.csv']

class Iterator:

  def open(self):
    pass

  def next(self):
    pass

  def close(self):
    pass

class TblScan(Iterator):

  def __init__(self,filename):
    self.filename = filename
    self.d = open(filename)    
    self.d = list(self.d)
    self.max = len(self.d)
    self.number = 1

  def open(filename):
    #print("Table scan opened!")
    with open('/content/'+filename, 'r', encoding='utf-8') as csvfile:
      d = csv.reader(csvfile)
      return d  
  

  def next(self):
     if self.max == self.number:
      return 'EOF'
     else:
      number = self.number
      row = self.d[number].split(',')
      self.number += 1      
      return row 


  def close(self):
    #print("Table scan closed!")
    self.max = len(self.d)
    self.number = 1

class EqSelect(Iterator):
  
  def __init__(self,input,attr,value):
    self.input = input
    self.attr = attr
    self.value = value

  def open(self):
    #print("Selection opened!")
    pass

  def next(self):
    r = 0
    while( r != 'EOF'):
      r = self.input.next()
      if(r[self.attr] == self.value): 
        return r
    return 'EOF'

  def close(self):
    self.input.close()

class HashJoin(Iterator):

  def __init__(self,input1,input2,attr1,attr2):
    self.input1 = input1
    self.input2 = input2
    self.attr1 = attr1
    self.attr2 = attr2

  def open(self):
    print("Hash join opened!")
  
  def next(self):
    r1 = 0
    r2 = 0
    while( r1 != 'EOF' ):
      r1 = self.input1.next()
      while( r2 != 'EOF'):
        r2 = self.input2.next()
        if(r1[self.attr1] == r2[self.attr2]):
          return r1+r2
      self.input2.close()
    return 'EOF'

  def close(self):
    self.input1.close()
    self.input2.close()
    #print("Hash join closed!")

class HashCountAgg(Iterator):

  def __init__(self,input,attr1,attr2):
    self.input = input
    self.attr1 = attr1
    self.attr2 = attr2
    #self.lstGroups = []
    self.countDict = {}

  def open(self):
    r = 0
    while( r != 'EOF'):
      r = self.input.next()
      if ( r != 'EOF'):
        if (r[self.attr1] not in self.countDict.keys()):
          self.countDict.update({r[self.attr1].replace('\n',''):[0]})
    self.input.close()
  
  def next(self):
    r = 0
    while( r != 'EOF'):
      r = self.input.next()
      if (len(r) < 10):
        return 'EOF'
      for k,v in self.countDict.items():
        if(r[self.attr1].replace('\n','') == k):
          v[0] = v[0] + 1
    return 'EOF'

  def close(self):
    pass

A = TblScan(table1)
R = TblScan(table2)
A2 = EqSelect(A,2,'F')
AR = HashJoin(A2,R,0,2)
#q = HashCountAgg(AR,9,1)

AR.open()
r = ''
with open(outputFile, mode='w') as of:
    of = csv.writer(of, delimiter=',')
    while( r != 'EOF'):
      r = AR.next()
      of.writerow(r)
      #print(r)
AR.close()
